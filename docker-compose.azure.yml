version: '3.8'

# üê≥ DOCKER COMPOSE PARA AZURE APP SERVICE
# Optimizado para despliegue en Azure con Multi-Container

services:
  # ========== BASE DE DATOS ==========
  mysql:
    image: mysql:8.0
    container_name: vetclinic-mysql-azure
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: gestion_citas
      MYSQL_USER: vetclinic
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - vetclinic-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ========== BACKEND (SPRING BOOT) ==========
  backend:
    image: ${DOCKER_REGISTRY}/backend:${IMAGE_TAG:-latest}
    container_name: vetclinic-backend-azure
    restart: always
    environment:
      # Base de datos (nombre del servicio mysql)
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/gestion_citas?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: vetclinic
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}

      # JWT
      JWT_SECRET: ${JWT_SECRET}

      # JPA
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false

      # CORS (permitir frontend en Azure)
      CORS_ALLOWED_ORIGINS: https://${WEBSITE_HOSTNAME},http://${WEBSITE_HOSTNAME}

      # Server
      SERVER_PORT: 8080
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - vetclinic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # ========== FRONTEND + LANDING (NGINX) ==========
  frontend:
    image: ${DOCKER_REGISTRY}/frontend:${IMAGE_TAG:-latest}
    container_name: vetclinic-frontend-azure
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - vetclinic-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

# ========== VOL√öMENES ==========
volumes:
  mysql-data:
    driver: local

# ========== REDES ==========
networks:
  vetclinic-network:
    driver: bridge


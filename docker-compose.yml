# ====================================================================
# Docker Compose - Clínica Veterinaria (Stack Completo)
# ====================================================================
# Proyecto: Sistema completo con Backend, Frontend, Landing y MySQL
# Fecha: 2025-01-20
# Versión: 1.0.0
# NOTA: Usando MySQL local del host (no contenedor)
# ====================================================================

# ====================================================================
# SERVICIOS
# ====================================================================
services:

  # ==================================================================
  # SERVICIO 1: Backend Spring Boot
  # ==================================================================
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clinica-backend
    restart: unless-stopped
    
    environment:
      # Configuración de base de datos (conecta a MySQL del HOST)
      SPRING_DATASOURCE_URL: jdbc:mysql://host.docker.internal:3306/${MYSQL_DATABASE:-clinicaveterinaria}?useSSL=false&serverTimezone=America/Bogota&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-root}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-NuevaPasswordSegura2025!}
      
      # Configuración JPA/Hibernate
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      
      # JWT Secret (cambiar en producción)
      JWT_SECRET: ${JWT_SECRET:-wcXI62JRNzVvn9KOMFEypiamqs5A7PQfLrZBlkxu}
      
      # Configuración del servidor
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      
      # Zona horaria
      TZ: America/Bogota
      
      # Java Options
      JAVA_OPTS: -Xmx512m -Xms256m -XX:+UseG1GC
    
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    
    networks:
      - clinica-network
    
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    
    volumes:
      # Logs persistentes (opcional)
      - backend-logs:/app/logs
    
    # Permitir conexión al host
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # ==================================================================
  # SERVICIO 2: Frontend React (PLACEHOLDER - construir después)
  # ==================================================================
  # frontend:
  #   build:
  #     context: ../frontend-gestion-citas
  #     dockerfile: Dockerfile
  #   container_name: clinica-frontend
  #   restart: unless-stopped
  #   
  #   environment:
  #     VITE_API_URL: http://localhost:8080
  #   
  #   ports:
  #     - "${FRONTEND_PORT:-80}:80"
  #   
  #   depends_on:
  #     - backend
  #   
  #   networks:
  #     - clinica-network

  # ==================================================================
  # SERVICIO 3: Landing Page (PLACEHOLDER - construir después)
  # ==================================================================
  # landing:
  #   build:
  #     context: ../landing-page
  #     dockerfile: Dockerfile
  #   container_name: clinica-landing
  #   restart: unless-stopped
  #   
  #   ports:
  #     - "${LANDING_PORT:-8081}:80"
  #   
  #   networks:
  #     - clinica-network

# ====================================================================
# VOLÚMENES PERSISTENTES
# ====================================================================
volumes:
  backend-logs:
    driver: local
    name: clinica-backend-logs

# ====================================================================
# REDES
# ====================================================================
networks:
  clinica-network:
    driver: bridge
    name: clinica-network
